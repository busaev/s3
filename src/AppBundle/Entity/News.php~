<?php

namespace AppBundle\Entity;

use Doctrine\ORM\Mapping as ORM;
use Doctrine\Common\Collections\ArrayCollection;
use Symfony\Component\Validator\Constraints as Assert;
use AppBundle\Annotations\Description;
use AppBundle\Annotations\DescriptionObject;


/**
 * AppBundle\Entity\News
 *
 * @DescriptionObject("news", title="News")
 *
 * @ORM\Table(name="news")
 * @ORM\Entity(repositoryClass="AppBundle\Repository\NewsRepository")
 */
class News
{
    /**
     * @var integer $id
     *
     * @ORM\Column(name="id", type="integer")
     * @ORM\Id
     * @ORM\GeneratedValue(strategy="AUTO")
     */
    private $id;

    // /**
    //  * @var int
    //  *
    //  * @ORM\Column(name="id_status", type="integer", nullable="true")
    //  */
    // private $idStatus;

    /**
     *
     * @var string $title
     *
     * @Description("title", title="Title", dataType="string")
     *
     * @ORM\Column(name="title", type="string", unique=false, nullable=true, length=255)
     *
     */
    private $title;

    /**
     *
     * @var string $short_content
     *
     * @Description("shortContent", title="Short content", dataType="string")
     *
     * @ORM\Column(name="short_content", type="text", unique=false, nullable=true)
     *
     */
    private $shortContent;

    /**
     * @var string $content
     *
     * @ORM\Column(name="content", type="text", unique=false, nullable=true)
     *
     */
    private $content;

    /**
     * @var boolean $visible
     *
     * @Description("hidden", title="Hidden", dataType="boolean")
     *
     * @ORM\Column(name="hidden", type="boolean", unique=false, nullable=true)
     */
    private $hidden = false;

    /**
     * @var boolean $disabled
     *
     * @Description("disabled", title="Disabled", dataType="boolean")
     *
     * @ORM\Column(name="disabled", type="boolean", unique=false, nullable=true)
     */
    private $disabled = false;

    /**
     * @Description("entryStatus", title="Entry status", dataType="string")
     *
     * @ORM\ManyToOne(targetEntity="\AppBundle\Model\ScrollItemSubjectInterface")
     */
    private $entryStatus;


    /**
     *
     */
    public function __construct()
    {
    }

    public function __toString() {
        $title = $this->getTitle();
        if(is_string($title))
            return $title;
        return '';
    }

    /**
     * Get id
     *
     * @return integer
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Set title
     *
     * @param string $title
     * @return News
     */
    public function setTitle($title)
    {
        $this->title = $title;

        return $this;
    }

    /**
     * Get title
     *
     * @return string
     */
    public function getTitle()
    {
        return $this->title;
    }

    /**
     * Set short_content
     *
     * @param string $short_content
     * @return News
     */
    public function setShortContent($shortContent)
    {
        $this->shortContent = $shortContent;

        return $this;
    }

    /**
     * Get short_content
     *
     * @return string
     */
    public function getShortContent()
    {
        return $this->shortContent;
    }

    /**
     * Set content
     *
     * @param string $content
     * @return News
     */
    public function setContent($content)
    {
        $this->content = $content;

        return $this;
    }

    /**
     * Get content
     *
     * @return string
     */
    public function getContent()
    {
        return $this->content;
    }

    function getHidden() {
        return $this->hidden;
    }

    function getDisabled() {
        return $this->disabled;
    }

    function setHidden($hidden) {
        $this->hidden = $hidden;
    }

    function setDisabled($disabled) {
        $this->disabled = $disabled;
    }
}
